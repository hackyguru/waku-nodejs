import { ConnectionManager, LightPushCore } from "@waku/core";
import { type IEncoder, ILightPush, type IMessage, type ISenderOptions, type Libp2p, type ProtocolCreateOptions, SDKProtocolResult } from "@waku/interfaces";
export declare class LightPush implements ILightPush {
    private libp2p;
    private numPeersToUse;
    readonly protocol: LightPushCore;
    constructor(connectionManager: ConnectionManager, libp2p: Libp2p, options?: ProtocolCreateOptions);
    send(encoder: IEncoder, message: IMessage, options?: ISenderOptions): Promise<SDKProtocolResult>;
    private attemptRetries;
    private getConnectedPeers;
}
export declare function wakuLightPush(connectionManager: ConnectionManager, init?: Partial<ProtocolCreateOptions>): (libp2p: Libp2p) => ILightPush;
